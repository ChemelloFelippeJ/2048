{"ast":null,"code":"var _jsxFileName = \"/home/felippe/myProjects/2019-2_DevWeb01/WEB/src/components/Conta.js\";\nimport React, { Component } from 'react';\nimport api from '../services/api';\nexport default class Conta extends Component {\n  constructor(props) {\n    super(props);\n\n    this.conta = async () => {\n      if (this.state.textButton2 == 'Cadastrar') {\n        const config = {\n          url: '/users',\n          method: 'post',\n          data: {\n            username: this.state.username,\n            email: this.state.email,\n            password: this.state.password\n          }\n        };\n        api.request(config).then(response => {\n          if (response.status == 200) {\n            window.alert(\"Cadastro realizado com sucesso! \\nEfetue Login para acessar!\");\n          } else {\n            window.alert(\"Erro ao Cadastrar\\nCadastro já existe\");\n          }\n        }).catch(error => {\n          window.alert(\"Erro ao Cadastrar\\nCadastro já existe\");\n        });\n      } else if (this.state.textButton2 == 'Login') {\n        const config = {\n          url: '/sessions',\n          method: 'post',\n          data: {\n            email: this.state.email,\n            password: this.state.password\n          }\n        };\n        api.request(config).then(response => {\n          if (response.status == 200) {\n            localStorage.setItem('token', response.data.token);\n            window.alert(\"Login efetuado com sucesso\");\n            window.location.reload(false);\n          } else {\n            window.alert(\"Erro ao efetuar login\" + response);\n          }\n        }).catch(error => {\n          window.alert(\"Erro ao efetuar login\");\n        });\n      }\n    };\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      textButton: \"Já cadastrado? Faça Login!\",\n      textButton2: \"Cadastrar\",\n      logado: localStorage.getItem('token') != null ? true : false\n    };\n  }\n\n  salvaEstado(text, input) {\n    this.setState({\n      [input]: text.target.value\n    });\n  }\n\n  changebutton() {\n    if (this.state.textButton == \"Já cadastrado? Faça Login!\") {\n      this.setState({\n        textButton: 'Não tem conta ainda? Crie agora!',\n        textButton2: 'Login'\n      });\n    } else {\n      this.setState({\n        textButton: 'Já cadastrado? Faça Login!',\n        textButton2: 'Cadastrar'\n      });\n    }\n  }\n\n  deslogar() {\n    localStorage.removeItem('token');\n    window.location.reload(false);\n  }\n\n  render() {\n    //Não está logado\n    if (!this.state.logado) {\n      return React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bgline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        id: \"h2daconta\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, this.state.textButton2), React.createElement(\"div\", {\n        id: \"signup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"signup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"user\",\n        type: \"text\",\n        className: \"inputfield \".concat(this.state.textButton2 == 'Login' ? 'hidden' : ''),\n        placeholder: \"Username\",\n        onChange: text => {\n          this.salvaEstado(text, \"username\");\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"email\",\n        type: \"email\",\n        className: \"inputfield\",\n        placeholder: \"E-mail\",\n        onChange: text => {\n          this.salvaEstado(text, \"email\");\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        if: \"senha\",\n        type: \"Password\",\n        className: \"inputfield\",\n        placeholder: \"Senha\",\n        onChange: text => {\n          this.salvaEstado(text, \"password\");\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        class: \"inputsubmit\",\n        onClick: () => this.conta(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, this.state.textButton2), React.createElement(\"div\", {\n        style: {\n          margin: 10 + 'px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"transformableButton\",\n        class: \"inputsubmit\",\n        onClick: () => this.changebutton(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.state.textButton)))));\n    } else {\n      return React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Configura\\xE7\\xF5es da Conta\")), React.createElement(\"div\", {\n        className: \"container1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"controle\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        id: \"avatar\",\n        src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTmHvlQey7sRB-lIKvwZQHlY-Gwi0TIDWloz6LZcCYwdubZ5-nV\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Nome de usuario\"), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        id: \"exampleInputname\",\n        \"aria-describedby\": \"name\",\n        placeholder: \"Nome Usuario\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"exampleInputEmail1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        type: \"email\",\n        class: \"form-control\",\n        id: \"exampleInputEmail1\",\n        \"aria-describedby\": \"email\",\n        placeholder: \"Email\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-link\",\n        onClick: \"document.getElementById('formsenha').style.display = 'initial'\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Alterar Senha\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"form-group\",\n        id: \"formsenha\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"exampleInputPassword1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Senha Atual\"), React.createElement(\"input\", {\n        type: \"password\",\n        class: \"form-control\",\n        id: \"senha\",\n        placeholder: \"Senha atual\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"exampleInputPassword1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Nova Senha\"), React.createElement(\"input\", {\n        type: \"password\",\n        class: \"form-control\",\n        id: \"senhanova\",\n        placeholder: \"Nova senha\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        class: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Alterar Senha\"))))), React.createElement(\"div\", {\n        className: \"bgline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        id: \"h2daconta\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, this.state.textButton2), React.createElement(\"div\", {\n        id: \"signup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"signup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"user\",\n        type: \"text\",\n        className: \"inputfield \".concat(this.state.textButton2 == 'Login' ? 'hidden' : ''),\n        placeholder: \"Username\",\n        onChange: text => {\n          this.salvaEstado(text, \"username\");\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"email\",\n        type: \"email\",\n        className: \"inputfield\",\n        placeholder: \"E-mail\",\n        onChange: text => {\n          this.salvaEstado(text, \"email\");\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        if: \"senha\",\n        type: \"Password\",\n        className: \"inputfield\",\n        placeholder: \"Senha\",\n        onChange: text => {\n          this.salvaEstado(text, \"password\");\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        class: \"inputsubmit\",\n        onClick: () => this.conta(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, this.state.textButton2), React.createElement(\"div\", {\n        style: {\n          margin: 10 + 'px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"transformableButton\",\n        class: \"inputsubmit\",\n        onClick: () => this.deslogar(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"SAIR\")))));\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/felippe/myProjects/2019-2_DevWeb01/WEB/src/components/Conta.js"],"names":["React","Component","api","Conta","constructor","props","conta","state","textButton2","config","url","method","data","username","email","password","request","then","response","status","window","alert","catch","error","localStorage","setItem","token","location","reload","textButton","logado","getItem","salvaEstado","text","input","setState","target","value","changebutton","deslogar","removeItem","render","margin"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport api from '../services/api';\r\n\r\nexport default class Conta extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            textButton: \"Já cadastrado? Faça Login!\",\r\n            textButton2: \"Cadastrar\",\r\n            logado: (localStorage.getItem('token') != null) ? true : false\r\n        }\r\n    }\r\n\r\n    conta = async () => {\r\n        if(this.state.textButton2 == 'Cadastrar'){\r\n            const config = {\r\n                url: '/users',\r\n                method: 'post',\r\n                data : {\r\n                    username: this.state.username,\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                }\r\n            }\r\n            api.request(config)\r\n                .then((response) => {\r\n                    if(response.status == 200){\r\n                        window.alert(\"Cadastro realizado com sucesso! \\nEfetue Login para acessar!\")\r\n                    }else{\r\n                        window.alert(\"Erro ao Cadastrar\\nCadastro já existe\");\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    window.alert(\"Erro ao Cadastrar\\nCadastro já existe\");\r\n                })\r\n        }else if(this.state.textButton2 == 'Login') {\r\n            const config = {\r\n                url: '/sessions',\r\n                method: 'post',\r\n                data : {\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                }\r\n            }\r\n            api.request(config)\r\n                .then((response) => {\r\n                    if(response.status == 200){\r\n                        localStorage.setItem('token', response.data.token)\r\n                        window.alert(\"Login efetuado com sucesso\");\r\n                        window.location.reload(false);\r\n                    }else{\r\n                        window.alert(\"Erro ao efetuar login\" + response);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    window.alert(\"Erro ao efetuar login\");\r\n                })\r\n        }\r\n    }\r\n\r\n    salvaEstado(text, input) {\r\n        this.setState({[input]: text.target.value});\r\n    }\r\n\r\n    changebutton() {\r\n        if(this.state.textButton == \"Já cadastrado? Faça Login!\"){\r\n            this.setState({\r\n                textButton: 'Não tem conta ainda? Crie agora!',\r\n                textButton2: 'Login'\r\n            })\r\n        }else{\r\n            this.setState({\r\n                textButton: 'Já cadastrado? Faça Login!',\r\n                textButton2: 'Cadastrar'\r\n            })\r\n        }\r\n    }\r\n\r\n    deslogar() {\r\n        localStorage.removeItem('token');\r\n        window.location.reload(false);\r\n    }\r\n\r\n    render() {\r\n        //Não está logado\r\n        if (!this.state.logado) {\r\n            return (\r\n                <section>\r\n                    <div className=\"bgline\"></div>\r\n                    <div className=\"login\">\r\n                        <div className=\"login-wrap\">\r\n                            <h2 id=\"h2daconta\">{this.state.textButton2}</h2>\r\n                            <div id=\"signup\">\r\n                                <form id=\"signup\">\r\n                                    <input id=\"user\" type=\"text\" className={`inputfield ${this.state.textButton2 == 'Login' ? 'hidden' : ''}`} placeholder=\"Username\" onChange={(text) => { this.salvaEstado(text, \"username\") }} required/> \r\n                                    <input id=\"email\" type=\"email\" className=\"inputfield\" placeholder=\"E-mail\" onChange={(text) => { this.salvaEstado(text, \"email\") }} required/>\r\n                                    <input if=\"senha\" type=\"Password\" className=\"inputfield\" placeholder=\"Senha\" onChange={(text) => { this.salvaEstado(text, \"password\") }} required/>\r\n                                </form>\r\n                                <button class=\"inputsubmit\" onClick={() => this.conta()}>{this.state.textButton2}</button>\r\n                                <div style={{margin: 10 + 'px'}}></div>\r\n                                <button id=\"transformableButton\" class=\"inputsubmit\" onClick={() => this.changebutton()}>{this.state.textButton}</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            )\r\n        } else {\r\n            return (\r\n                <section>\r\n                    <div className=\"heading\">\r\n                        <h1>Configurações da Conta</h1>\r\n                    </div>\r\n                    <div className=\"container1\">\r\n\r\n                    <div className=\"controle\" align=\"center\">\r\n\r\n                    <form>\r\n                    <img id=\"avatar\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTmHvlQey7sRB-lIKvwZQHlY-Gwi0TIDWloz6LZcCYwdubZ5-nV\"></img>\r\n                    <div className=\"form-group\">\r\n                    <label>Nome de usuario</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"exampleInputname\" aria-describedby=\"name\" placeholder=\"Nome Usuario\" disabled />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label for=\"exampleInputEmail1\">Email</label>\r\n                    <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"email\" placeholder=\"Email\" disabled />\r\n                    </div>\r\n                    \r\n                    <button type=\"button\" class=\"btn btn-link\" onClick=\"document.getElementById('formsenha').style.display = 'initial'\">Alterar Senha</button>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <div className=\"form-group\" id=\"formsenha\">\r\n                    <label for=\"exampleInputPassword1\">Senha Atual</label>\r\n\r\n                    <input type=\"password\" class=\"form-control\" id=\"senha\" placeholder=\"Senha atual\" required={true} />\r\n                    <br></br>\r\n                    <label for=\"exampleInputPassword1\">Nova Senha</label>\r\n                    <input type=\"password\" class=\"form-control\" id=\"senhanova\" placeholder=\"Nova senha\" required={true} />\r\n\r\n                    <br></br>\r\n                    <button type=\"submit\" class=\"btn btn-primary\">Alterar Senha</button>\r\n                    </div>\r\n                    </form>\r\n                    </div>\r\n                    </div>\r\n\r\n                    \r\n                    <div className=\"bgline\"></div>\r\n                    <div className=\"login\">\r\n                        <div className=\"login-wrap\">\r\n                            <h2 id=\"h2daconta\">{this.state.textButton2}</h2>\r\n                            <div id=\"signup\">\r\n                                <form id=\"signup\">\r\n                                    <input id=\"user\" type=\"text\" className={`inputfield ${this.state.textButton2 == 'Login' ? 'hidden' : ''}`} placeholder=\"Username\" onChange={(text) => { this.salvaEstado(text, \"username\") }} required/> \r\n                                    <input id=\"email\" type=\"email\" className=\"inputfield\" placeholder=\"E-mail\" onChange={(text) => { this.salvaEstado(text, \"email\") }} required/>\r\n                                    <input if=\"senha\" type=\"Password\" className=\"inputfield\" placeholder=\"Senha\" onChange={(text) => { this.salvaEstado(text, \"password\") }} required/>\r\n                                </form>\r\n                                <button class=\"inputsubmit\" onClick={() => this.conta()}>{this.state.textButton2}</button>\r\n                                <div style={{margin: 10 + 'px'}}></div>\r\n                                <button id=\"transformableButton\" class=\"inputsubmit\" onClick={() => this.deslogar()}>SAIR</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n\r\n\r\n            )\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}